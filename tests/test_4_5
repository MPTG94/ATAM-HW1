
  cmpq $A, (root)
  jne bad_exit

  movq $A, %rbx
  cmpq $20, (%rbx)
  jne bad_exit
  cmpq $B, 8(%rbx)
  jne bad_exit
  cmpq $C, 16(%rbx)
  jne bad_exit

  movq $B, %rbx
  cmpq $-4, (%rbx)
  jne bad_exit
  cmpq $D, 8(%rbx)
  jne bad_exit
  cmpq $new_node, 16(%rbx)
  jne bad_exit

  movq $C, %rbx
  cmpq $26, (%rbx)
  jne bad_exit
  cmpq $0, 8(%rbx)
  jne bad_exit
  cmpq $0, 16(%rbx)
  jne bad_exit

  movq $D, %rbx
  cmpq $-5, (%rbx)
  jne bad_exit
  cmpq $0, 8(%rbx)
  jne bad_exit
  cmpq $0, 16(%rbx)
  jne bad_exit

  movq $new_node, %rbx
  cmpq $0, (%rbx)
  jne bad_exit
  cmpq $0, 8(%rbx)
  jne bad_exit
  cmpq $0, 16(%rbx)
  jne bad_exit

  movq $60, %rax
  movq $0, %rdi
  syscall

bad_exit:
  movq $60, %rax
  movq $1, %rdi
  syscall

.section .data
new_node:
        .quad   0
        .quad   0
        .quad   0
root:
        .quad   A
D:
        .quad   -5
        .quad   0
        .quad   0
C:
        .quad   26
        .quad   0
        .quad   0
B:
        .quad   -4
        .quad   D
        .quad   0
A:
        .quad   20
        .quad   B
        .quad   C
